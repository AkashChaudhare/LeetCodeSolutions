--------------------------------java----------------------------------

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
    ListNode l1=headA;
    ListNode l2=headB;
    
    while(l1!=l2){
        l1=l1==null?headB:l1.next;
        l2=l2==null?headA:l2.next;
    }
        return l1;
    }
}

---------------------------------py-------------------------------------------
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:
        one=headA
        two=headB
        while(one!=two):
            one=headB if one is None else one.next
            two=headA if two is None else two.next
            
        return one

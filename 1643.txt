class Solution {
    public int furthestBuilding(int[] h, int bricks, int ladders) {
        PriorityQueue<Integer> pq=new PriorityQueue<>();
        for (int i=1;i<h.length;i++){
            int diff=h[i]-h[i-1];
            if(diff>0){
                if(pq.size()<ladders){
                    pq.offer(diff);
                }
                else{
                    int br=diff;
                    
                    if(pq.size()>0 && pq.peek()<diff){
                        br=pq.remove();
                        pq.offer(diff);
                    }
                    if(bricks>=br){
                        bricks-=br;
                    }
                    else{
                        return i-1;
                    }
                }
            }
        }
        return h.length-1;
    }
}

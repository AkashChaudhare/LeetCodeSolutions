class Solution:
    def findBall(self, grid: List[List[int]]) -> List[int]:
        rows,cols=len(grid),len(grid[0])
        ans=[]
        for i in range(cols):
            c=i
            r=0
            stuck=False
            while(stuck==False):
                if r==rows:
                    ans.append(c)
                    break
                elif grid[r][c]==1 and c!=cols-1 and grid[r][c]==grid[r][c + 1]:
                    r=r+1
                    c=c+1
                elif grid[r][c]==-1 and c!=0 and grid[r][c]==grid[r][c - 1]:
                    r=r+1
                    c=c-1
                else:
                    ans.append(-1)
                    stuck=True
        return ans
                    
                    
-------------------------------java-------------------------------

class Solution {
    public int[] findBall(int[][] grid) {
        int rows=grid.length,cols=grid[0].length;
        int[] ans = new int[cols];
        
        for(int i=0;i<cols;i++){
            int r=0,c=i;
            
            Boolean stuck=false;
            while(stuck==false){
                if(r==rows){
                    ans[i]=c;
                    break;
                }
                else if(grid[r][c]==1 && c!=cols-1 && grid[r][c]==grid[r][c + 1]){
                    r=r+1;
                    c=c+1;
                }
                else if(grid[r][c]==-1 && c!=0 && grid[r][c]==grid[r][c - 1]){
                    r=r+1;
                    c=c-1;
                }
                else{
                    ans[i]=-1;
                    stuck=true;
                }
            }
        }
        return ans;
    }
}

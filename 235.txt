------------------py-----------------------------

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        temp=root
        while(temp!=None):
            print(temp.val)
            if(temp.val>p.val) and (temp.val>q.val):
                temp=temp.left
            elif(temp.val<p.val) and (temp.val<q.val):
                temp=temp.right
            else:
                break
        return temp
                
        ---------------------------------------java---------------------------------------------
        /**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        
        while(true){
            if (root.val>p.val && root.val>q.val){
                root=root.left;
            }
            else if(root.val<p.val && root.val<q.val){
                root=root.right;
            }
            else{
                return root;
            }
        }
        
    }
}

class Solution:
    def longestPalindrome(self, s: str) -> str:
        res=''
        reslen=0

        for i in range(len(s)):     #odd length
            l,r=i,i
            while(l>=0 and r<len(s) and s[l]==s[r]):
                if r-l+1>reslen:
                    res=s[l:r+1]
                    reslen=r-l+1
                l-=1
                r+=1


            l,r=i,i+1
            while(l>=0 and r<len(s) and s[l]==s[r]):
                if r-l+1>reslen:
                    res=s[l:r+1]
                    reslen=r-l+1
                l-=1
                r+=1

        return res
        
        ---------java-----------
        
        class Solution {
    private int[] checkpal(int i, int j,String s){
        
        while(i>=0 && j<s.length()){
            if(s.charAt(i) == s.charAt(j)){
                i--;
                j++;
            } else {
                return new int[]{i,j};
            }
        }
        return new int[]{i,j};
    }
    public String longestPalindrome(String s) {
        if(s.length()<=1) return s;
        int maxLen=0;
        int fi=0;
        int fj=0;
        for(int i=0;i<s.length();i++){
            
            int[] t1 = checkpal(i,i+1,s);
            int[] t2 = checkpal(i-1,i,s);
            int[] t3 = checkpal(i-1,i+1,s);
            
            int s1 = t1[1]-t1[0];
            int s2 = t2[1]-t2[0];
            int s3 = t3[1]-t3[0];
            int max = 0;
            
            if(s1>s2 && s1>s3){
                if(maxLen<s1){
                    maxLen = s1;
                    fi = t1[0];
                    fj = t1[1];
                }
            } else if(s2>s1 && s2>s1){
                if(maxLen<s2){
                    maxLen = s2;
                    fi = t2[0];
                    fj = t2[1];
                }
            } else if(s3>s2 && s3>s1){
                if(maxLen<s3){
                    maxLen = s3;
                    fi = t3[0];
                    fj = t3[1];
                }
            } 
        }
        return s.substring(fi+1,fj);
    }
}

        
        

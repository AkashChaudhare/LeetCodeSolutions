class Solution:
    def snakesAndLadders(self, board: List[List[int]]) -> int:
        n=len(board)
        board.reverse()
        
        def loc(pos):
            r=(pos-1)//n
            c=(pos-1)%n
            if r%2==1:
                c=n-1-c
            return [r,c]

        q=deque()
        q.append([1,0])
        visit=set()

        while q:
            square,moves=q.popleft()

            for i in range(1,7):
                next_square=square+i
                r,c=loc(next_square)
                if board[r][c]!=-1:
                    next_square=board[r][c]
                if next_square==n*n:
                    return moves+1
                if next_square not in visit:
                    visit.add(next_square)
                    q.append([next_square,moves+1])
        return -1
                






